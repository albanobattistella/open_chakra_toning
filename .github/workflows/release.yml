# Build and release versions of the app.
name: "Build, Test, Release"

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
  schedule:
  - cron: '14 7 * * 0'  # run once a week on Sunday
  workflow_dispatch:

jobs:
  build-android:
    name: "Android Build"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
    - name: build Android
      run: |
        flutter build apk
        mv build/app/outputs/flutter-apk/app-release.apk eu.quelltext.open_chakra_toning.apk
    - uses: actions/upload-artifact@v4
      with:
        name: android
        path: eu.quelltext.open_chakra_toning.apk

  build-linux:
    name: "Linux Build"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
    - name: update dependencies
      run: sudo apt update
    - name: install depenencies
      run: sudo apt install -qq libgtk-3-0 libblkid1 liblzma5 ninja-build libgtk-3-dev clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev libgstreamer1.0-dev libunwind-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
    - name: build
      run: |
        flutter build linux
        target="build/linux/x64/release/Open-Chakra-Toning"
        mv build/linux/x64/release/bundle "$target"
        # add files for flatpak build
        cp -r \
          flatpak/inside.sh \
          flatpak/eu.quelltext.open_chakra_toning.metainfo.xml \
          flatpak/eu.quelltext.open_chakra_toning.desktop \
          flatpak/open_chakra_toning.sh \
          assets/img/icon \
          "$target"
        (
          cd build/linux/x64/release/
          zip -r Open-Chakra-Toning-linux-x64.zip Open-Chakra-Toning
        )
        mv build/linux/x64/release/Open-Chakra-Toning-linux-x64.zip .
    - uses: actions/upload-artifact@v4
      with:
        name: linux
        path: Open-Chakra-Toning-linux-x64.zip
  
  build-web:
    name: "Web Build"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
    - name: build web
      run: |
        flutter build web
        (
          cd build
          mv web Open-Chakra-Toning
          zip -r ../Open-Chakra-Toning-web.zip Open-Chakra-Toning
        )
    - uses: actions/upload-artifact@v4
      with:
        name: web
        path: Open-Chakra-Toning-web.zip

  test-flutter:
    name: "Flutter Tests"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
    - run: flutter pub get
    - run: flutter test

  test-version:
    name: "General Tests"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: ./test/test_version.sh
  
  build-flatpak:
    name: "Flatpak Build"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
    - build-linux
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:gnome-44
      options: --privileged
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@master
      with:
        name: linux
        path: .
    - name: unpack linux build
      run: |
        (
          cd flatpak
          unzip ../Open-Chakra-Toning-linux-x64.zip
        )
    - name: flatpak build
      uses: flathub-infra/flatpak-github-actions/flatpak-builder@master
      with:
        bundle: Open-Chakra-Toning-linux.flatpak
        manifest-path: flatpak/eu.quelltext.open_chakra_toning.yml
        upload-artifact: false
    - uses: actions/upload-artifact@v4
      with:
        name: flatpak
        path: Open-Chakra-Toning-linux.flatpak

  build-windows:
    name: "Windows Build"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - run: flutter pub get
    - name: build
      run: |
        dart run msix:create
        mv build\windows\x64\runner\Release\open_chakra_toning.msix Open-Chakra-Toning.msix
    - uses: actions/upload-artifact@v4
      with:
        name: windows
        path: Open-Chakra-Toning.msix

  test-release:
    name: "Test Release"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Check release information
      run: test/test_release.sh "$GITHUB_REF_NAME"

  deploy-github-release:
    name: "Deploy Release"
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
    - build-web
    - build-linux
    - build-android
    - build-flatpak
    - test-flutter
    - test-release
    - test-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@master
      with:
        name: linux
        path: artifacts/
    - uses: actions/download-artifact@master
      with:
        name: android
        path: artifacts/
    - uses: actions/download-artifact@master
      with:
        name: web
        path: artifacts/
    - uses: actions/download-artifact@master
      with:
        name: flatpak
        path: artifacts/
    - uses: actions/download-artifact@master
      with:
        name: windows 
        path: artifacts/
    - name: create release
      uses: ncipollo/release-action@v1 # see https://github.com/ncipollo/release-action
      with:
        allowUpdates: true
        artifacts: "artifacts/*"

  deploy-github-pages:
    name: "Deploy GitHub Pages"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
    - test-flutter
    - test-version
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
    - uses: bluefireteam/flutter-gh-pages@v8
      with:
        baseHref: /
        customArgs: --source-maps
  